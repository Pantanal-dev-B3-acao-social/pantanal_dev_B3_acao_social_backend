# http://localhost:9090/realms/realm-pantanal-dev/.well-known/openid-configuration
#db-name: social_action_postgres_db
acao-social:
  db:
    active: dbinit
#    db-name: postgres_dev
    db-name: postgres
    sprint-init: classpath:db/script/dev/init_db_development.sql
  spring-boot:
    environment: development
  server:
    port: '3001'
    host: http://localhost/
  keyclock:
    baseUrl: http://localhost:9090

server:
  port: '3001'
  host: http://localhost/

spring:
#  profiles:
#    active: dbinit
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration/dataDefinitionDevelopment
#    locations: classpath:db/migration/dataDefinitionProduction
  datasource:
    url: jdbc:postgresql://localhost:5432/${acao-social.db.db-name}
    username: dev_user
    password: dev_password
#    initialization-mode: always
#    schema: db/script/initDbDevelopment.sql
    hikari:
      maxLifetime: '1800000'
      connectionTimeout: '500000'
      idleTimeout: '60000'
      maximumPoolSize: '10'
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update  # Impede a criação automática de tabelas e colunas
      hbm2ddl:
        auto: update
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9090/realms/realm-pantanal-dev
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
      client:
        registration:
          realm-pantanal-dev:
            provider: realm-pantanal-dev
            client-name: client-id-backend-1
            client-id: client-id-backend-1
            client-secret: uXfLOkhKTekWg674dKs41GmU0a1vhHzG
            scope: openid,offline_access,profile
            authorization-grant-type: authorization_code
#            redirect-uri: http://localhost:
        provider:
          realm-pantanal-dev:
            issuer-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}
